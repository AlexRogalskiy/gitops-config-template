apiVersion: v1
kind: Namespace
metadata:
  annotations: null
  labels:
    app: inventory
    appVersion: SNAPSHOT-PR-46-cea6f76a
    chart: application-0.0.73
    group: com.stakater
    heritage: Helm
    kind: pr
    provider: stakater
    release: stakater-nordmart-inventory
    stakater.com/tenant: veeru
    team: gabbar
  name: veeru-stakater-nordmart-inventory-pr-46
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: inventory
    appVersion: SNAPSHOT-PR-46-cea6f76a
    chart: application-0.0.73
    group: com.stakater
    heritage: Helm
    provider: stakater
    release: stakater-nordmart-inventory
    team: nordmart
  name: inventory
  namespace: veeru-stakater-nordmart-inventory-pr-46
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: stakater-nordmart-inventory
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
  name: inventory-postgres
  namespace: veeru-stakater-nordmart-inventory-pr-46
---
apiVersion: v1
data:
  DB_NAME: inventory
  JAEGER_ENDPOINT: http://jaeger-collector.istio-system:14268/api/traces
  POSTGRESQL_HOST: inventory-postgres
kind: ConfigMap
metadata:
  labels:
    app: inventory
    appVersion: SNAPSHOT-PR-46-cea6f76a
    chart: application-0.0.73
    group: com.stakater
    heritage: Helm
    provider: stakater
    release: stakater-nordmart-inventory
    team: nordmart
  name: inventory
  namespace: veeru-stakater-nordmart-inventory-pr-46
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: inventory
    appVersion: SNAPSHOT-PR-46-cea6f76a
    chart: application-0.0.73
    group: com.stakater
    heritage: Helm
    provider: stakater
    release: stakater-nordmart-inventory
    team: nordmart
  name: inventory
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: inventory
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: stakater-nordmart-inventory
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
  name: inventory-postgres-headless
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  clusterIP: None
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: stakater-nordmart-inventory
    app.kubernetes.io/name: postgresql
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: stakater-nordmart-inventory
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
  name: inventory-postgres
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: stakater-nordmart-inventory
    app.kubernetes.io/name: postgresql
    role: master
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: inventory
    appVersion: SNAPSHOT-PR-46-cea6f76a
    chart: application-0.0.73
    group: com.stakater
    heritage: Helm
    provider: stakater
    release: stakater-nordmart-inventory
    team: nordmart
  name: inventory
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  replicas: 2
  selector:
    matchLabels:
      app: inventory
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        app: inventory
        team: nordmart
      labels:
        app: inventory
    spec:
      containers:
      - env:
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: inventory-postgres
        envFrom:
        - configMapRef:
            name: inventory
        image: nexus-docker-openshift-stakater-nexus.apps.binero-test.8sdzwd1l.kubeapp.cloud/stakater-nordmart-inventory:SNAPSHOT-PR-46-cea6f76a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: inventory
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 0.5
            memory: 1Gi
          requests:
            cpu: 0.1
            memory: 128Mi
        volumeMounts:
        - mountPath: /data/db
          name: inventory-postgres
      imagePullSecrets:
      - name: nexus-docker-config-forked
      serviceAccountName: inventory
      volumes:
      - csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: inventory-postgres
        name: inventory-postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: stakater-nordmart-inventory
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-9.1.4
  name: inventory-postgres
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: stakater-nordmart-inventory
      app.kubernetes.io/name: postgresql
      role: master
  serviceName: inventory-postgres-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: stakater-nordmart-inventory
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-9.1.4
        role: master
      name: inventory-postgres
    spec:
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql
        - name: PGDATA
          value: /bitnami/postgresql/data
        - name: POSTGRES_USER
          value: admin
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: inventory-postgres
        - name: POSTGRES_DB
          value: inventory
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        image: docker.io/bitnami/postgresql:11.8.0-debian-10-r76
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "admin" -d "dbname=inventory" -h 127.0.0.1 -p 5432
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: inventory-postgres
        ports:
        - containerPort: 5432
          name: tcp-postgresql
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "admin" -d "dbname=inventory" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /bitnami/postgresql
          name: data
          subPath: null
      initContainers:
      - command:
        - /bin/sh
        - -cx
        - |
          mkdir -p /bitnami/postgresql/data
          chmod 700 /bitnami/postgresql/data
          find /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name "conf" -not -name ".snapshot" -not -name "lost+found" | \
            xargs chown -R `id -u`:`id -G | cut -d " " -f2`
        image: docker.io/bitnami/minideb:stretch
        imagePullPolicy: Always
        name: init-chmod-data
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext: null
        volumeMounts:
        - mountPath: /bitnami/postgresql
          name: data
          subPath: null
        - mountPath: /dev/shm
          name: dshm
      serviceAccountName: inventory-postgres
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 1Gi
        name: dshm
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: stakater
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: inventory
    appVersion: SNAPSHOT-PR-46-cea6f76a
    chart: application-0.0.73
    group: com.stakater
    heritage: Helm
    provider: stakater
    release: stakater-nordmart-inventory
    router: default
    team: nordmart
  name: inventory
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  port:
    targetPort: http
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: inventory
    weight: 100
  wildcardPolicy: None
---
apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: inventory-postgres
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  parameters:
    objects: "- objectName: \"postgresql-passowrd\"\n  secretPath: \"veeru/kv/data/inventory-postgres\"\n
      \ secretKey: \"postgresql-password\"  \n"
    roleName: veeru-stakater-nordmart-inventory-pr-46
  provider: vault
  secretObjects:
  - data:
    - key: postgresql-password
      objectName: postgresql-passowrd
    secretName: inventory-postgres
    type: Opaque
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: inventory
    appVersion: SNAPSHOT-PR-46-cea6f76a
    chart: application-0.0.73
    group: com.stakater
    heritage: Helm
    provider: stakater
    release: stakater-nordmart-inventory
    team: nordmart
  name: inventory-svc-monitor
  namespace: veeru-stakater-nordmart-inventory-pr-46
spec:
  endpoints:
  - interval: 5s
    path: /prometheus
    port: http
  namespaceSelector:
    matchNames:
    - veeru-stakater-nordmart-inventory-pr-46
  selector:
    matchLabels:
      app: inventory
